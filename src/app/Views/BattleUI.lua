--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Layer
local Layer=cc.Node:create()
Layer:setName("Layer")

--Create Node_1
local Node_1=cc.Node:create()
Node_1:setName("Node_1")
Node_1:setTag(4)
Node_1:setCascadeColorEnabled(true)
Node_1:setCascadeOpacityEnabled(true)
Node_1:setPosition(568.0000, 576.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(Node_1)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.9000)
layout:setLeftMargin(568.0000)
layout:setRightMargin(568.0000)
layout:setTopMargin(64.0000)
layout:setBottomMargin(576.0000)
Layer:addChild(Node_1)

--Create Text_1
local Text_1 = ccui.Text:create()
Text_1:ignoreContentAdaptWithSize(true)
Text_1:setTextAreaSize(cc.size(0, 0))
Text_1:setFontName("LabelFont/font1.ttf")
Text_1:setFontSize(36)
Text_1:setString([[剩余行动力：5]])
Text_1:setLayoutComponentEnabled(true)
Text_1:setName("Text_1")
Text_1:setTag(12)
Text_1:setCascadeColorEnabled(true)
Text_1:setCascadeOpacityEnabled(true)
Text_1:setPosition(0.0000, 0.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(Text_1)
layout:setPositionPercentX(0.0000)
layout:setPositionPercentY(0.0000)
layout:setSize(cc.size(240.0000, 54.0000))
layout:setLeftMargin(-120.0000)
layout:setRightMargin(-120.0000)
layout:setTopMargin(-27.0000)
layout:setBottomMargin(-27.0000)
Node_1:addChild(Text_1)

--Create Node_2
local Node_2=cc.Node:create()
Node_2:setName("Node_2")
Node_2:setTag(4)
Node_2:setCascadeColorEnabled(true)
Node_2:setCascadeOpacityEnabled(true)
Node_2:setPosition(578.0000, 566.0001)
layout = ccui.LayoutComponent:bindLayoutComponent(Node_2)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.5088)
layout:setPositionPercentY(0.8844)
layout:setLeftMargin(578.0000)
layout:setRightMargin(558.0000)
layout:setTopMargin(73.9999)
layout:setBottomMargin(566.0001)
Layer:addChild(Node_2)

--Create Text_2
local Text_2 = ccui.Text:create()
Text_2:ignoreContentAdaptWithSize(true)
Text_2:setTextAreaSize(cc.size(0, 0))
Text_2:setFontName("LabelFont/font1.ttf")
Text_2:setFontSize(20)
Text_2:setString([[当前状态：普通]])
Text_2:setLayoutComponentEnabled(true)
Text_2:setName("Text_2")
Text_2:setTag(5)
Text_2:setCascadeColorEnabled(true)
Text_2:setCascadeOpacityEnabled(true)
Text_2:setPosition(-372.9869, 9.0078)
layout = ccui.LayoutComponent:bindLayoutComponent(Text_2)
layout:setPositionPercentX(0.0000)
layout:setPositionPercentY(0.0000)
layout:setSize(cc.size(139.0000, 30.0000))
layout:setHorizontalEdge(1)
layout:setVerticalEdge(2)
layout:setLeftMargin(-442.4869)
layout:setRightMargin(303.4869)
layout:setTopMargin(-24.0078)
layout:setBottomMargin(-5.9922)
Node_2:addChild(Text_2)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Layer
return result;
end

return Result

